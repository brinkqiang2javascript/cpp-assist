{
	"publisher": "ronnysherer",
	"author": {
		"name": "Ronny Sherer"
	},
	"homepage": "https://github.com/ronshe/cpp-helper/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/ronshe/cpp-helper"
	},
	"bugs": {
		"url": "https://github.com/ronshe/cpp-helper/issues"
	},
	"name": "cpp-helper",
	"icon": "images/icon.png",
	"displayName": "C++ helper",
	"description": "C++ shortcuts",
	"license": "See license in LICENSE.txt",
	"version": "0.1.3",
	"engines": {
		"vscode": "^1.36.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:extension.includeFile",
		"onCommand:extension.includeGuard",
		"onCommand:extension.createClass"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.includeFile",
				"title": "c++ helper: include file"
			},
			{
				"command": "extension.includeGuard",
				"title": "c++ helper: include guard"
			},
			{
				"command": "extension.createClass",
				"title": "c++ helper: create class"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "explorerResourceIsFolder",
					"command": "extension.createClass"
				}
			]
		},
		"keybindings": [
			{
				"command": "extension.includeFile",
				"title": "c++ helper: include file",
				"key": "ctrl+alt+i",
				"mac": "cmd+alt+i",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.includeGuard",
				"title": "c++ helper: include guard",
				"key": "ctrl+alt+g",
				"mac": "cmd+alt+g",
				"when": "editorTextFocus"
			}
		],
		"configuration": [
			{
				"title": "C++ Helper",
				"properties": {
					"cpp_helper.removePathUntil": {
						"type": "string",
						"default": "",
						"description": "Ignore this path prefix from `include` path and include guard. If empty, it will ignore the path of current workspace"
					},
					"cpp_helper.includeFile.isRelative": {
						"type": "boolean",
						"default": true,
						"description": "Is include path relative to current position or absolute from current workspace root."
					},
					"cpp_helper.includeGuard.prefix": {
						"type": "string",
						"default": "__",
						"description": "Prefix for include guard."
					},
					"cpp_helper.includeGuard.suffix": {
						"type": "string",
						"default": "__",
						"description": "Suffix for include guard."
					},
					"cpp_helper.includeGuard.commentStyle": {
						"type": "string",
						"enum": [
							"block comment",
							"line comment",
							"None"
						],
						"default": "block comment",
						"description": "Style of comment in include guard end."
					},
					"cpp_helper.includeGuard.spacesBeforeComment": {
						"type": "number",
						"minimum": 0,
						"maximum": 40,
						"default": 2,
						"description": "How many spaces between the '#endif' and the comment."
					},
					"cpp_helper.createClass.cppExtension": {
						"type": "string",
						"default": "cpp",
						"description": "Extension of C++ implementation file."
					},
					"cpp_helper.createClass.hppExtension": {
						"type": "string",
						"default": "h",
						"description": "Extension of C++ header file."
					},
					"cpp_helper.createClass.cppTemplate": {
						"type": "string",
						"default": "",
						"description": "Template of C++ header file."
					},
					"cpp_helper.createClass.hppTemplate": {
						"type": "string",
						"default": "",
						"description": "Template of C++ header file."
					}
				}
			}
		]
	},
	"scripts": {
		"test": "node ./test/runTest.js",
		"create": "node node_modules/vsce/out/vsce package -o ./cpp-helper.vsix",
		"make": "node node_modules/vsce/out/vsce package -o ./cpp-helper.vsix && code --install-extension ./cpp-helper.vsix && node node_modules/del-cli/cli.js ./cpp-helper.vsix"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.12.21",
		"@types/vscode": "^1.36.0",
		"eslint": "^5.13.0",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"typescript": "^3.3.1",
		"vscode-test": "^1.0.2"
	},
	"dependencies": {
		"del-cli": "^2.0.0",
		"vsce": "^1.66.0"
	}
}
